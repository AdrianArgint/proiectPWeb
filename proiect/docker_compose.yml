# This configuration is intended for development purpose, it's **your** responsibility to harden it for production
version: '3.8'
services:
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    ports:
      - 9100:9000
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer:/data

  proiect-app:
    image: proiect
    command:
      - ./mvnw
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
    volumes:
      - ./logs/spring.log:/logs/spring.log
    ports:
      - 8080:8080

  proiect-postgresql:
    image: postgres:14.2
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=proiect
      - POSTGRES_PASSWORD=
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - 5432:5432

  kong:
    image: kong:latest
    volumes:
      - ./kong/kong.yml:/usr/local/kong/declarative/kong.yml
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/usr/local/kong/declarative/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    ports:
      - 9187:9187
    environment:
      DATA_SOURCE_NAME: 'postgresql://proiect@host.docker.internal:5432/proiect?sslmode=disable'

  rabbit-mq:
    image: rabbitmq:3.9.8-management-alpine
    container_name: rabbitmq
    restart: on-failure
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin

  proiect-prometheus:
    image: prom/prometheus:v2.33.3
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090

  proiect-grafana:
    image: grafana/grafana:8.4.1
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    ports:
      - 3000:3000

  loki:
    image: grafana/loki
    volumes:
      - ./loki:/etc/config/
    command: -config.file=/etc/config/loki.yml
    ports:
      - 3100:3100

  promtail:
    image: grafana/promtail:2.2.1
    container_name: promtail-service
    volumes:
      - ./logs:/var/log/
      - ./promtail:/etc/promtail/
    command: -config.file=/etc/promtail/promtail.yml

volumes:
  db:
    driver: local
